{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-4e48d80f81283c88.js","node_modules/@parcel/runtime-js/lib/runtime-2736865e273d51a1.js","src/js/localstorage.js","src/js/plugins.js","src/js/cart.js","src/hbs/cart.hbs","src/js/modal_hbs.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"U0nFS\\\":\\\"index.d5c3c33d.js\\\",\\\"CVUpS\\\":\\\"sprite_market.15459aa5.svg\\\",\\\"20df4\\\":\\\"logo-social.3d75b350.png\\\"}\"));","module.exports = require('./helpers/bundle-url').getBundleURL('U0nFS') + require('./helpers/bundle-manifest').resolve(\"CVUpS\");","'use strict';\n\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","'use strict';\nexport let plugins = {\n  filterArrByArr: function filterArrByArr(\n    arrayWithElements = [],\n    arrayForFiltering = [],\n    arrayForPushing = []\n  ) {\n    // * Проміжний результат зберігається тут\n    let foundedEl = {};\n    for (let i = 0; i < arrayWithElements.length; i += 1) {\n      foundedEl = arrayForFiltering.find(\n        post => post.postId === arrayWithElements[i]\n      );\n      // * Перевірка\n      if (foundedEl !== undefined) {\n        arrayForPushing.push(foundedEl);\n      }\n    }\n  },\n};\n","import sprite_market from '../images/sprite_market.svg';\nimport { autorsListData } from '../js-data/autorsList';\nimport { postsListData } from '../js-data/postsList';\nimport localstorage from './localstorage';\n\nexport let cartObj = {\n  cartInfo: {\n    contentCardsIdArr: ['101-2222'],\n    contentCardsObjArr: [{postId:'101-2222', name:'Куртка'}],\n    contentAutorsIdArr: ['101'],\n    totalQuantity: null,\n    totalSum: null,\n  },\n\n  addItem: function onAddItemToCart(itemId, itemObject, target) {\n    // this.cartInfo = localstorage.load('cartInfo');\n    // this.cartInfo.contentCardsIdArr.push(itemId);\n    // this.cartInfo.contentCardsObjArr.push(itemObject);\n    // this.cartInfo.contentAutorsIdArr.push(itemObject.autorId);\n    // this.cartInfo = localstorage.save('cartInfo', cartInfo);\n    // if (cartInfo !== undefined) {\n    // }\n    alert(`Товар art${itemId} додано до корзини.`);\n  },\n  removeItem: function onRemoveItemFromCart(itemId, target) {\n    alert(`Товар art${itemId} видалено із корзини.`);\n  },\n};\n","<div class='table --modalCart-grid'>\n  <div class='tbody --tbody-grid'>\n    {{!-- {{#each this}} --}}\n    <div class='row --card' data-card-id=''>\n      <div class='row cardInfo-grid'>\n        <div class='col --cardImg' data-title='img'><img\n            src='https://raw.githubusercontent.com/goodcat46/images/main/brand_cards/looks/look_1__2x.webp'\n            alt=''\n          /></div>\n        <div class='col --cardinfo' data-title='name'>\n          <div class='col --sku' data-title='sku'>art25252525\n          </div>\n          <div class='col --autorId' data-title='autorId'>lookMaker-217\n          </div>\n          <div class='col --name' data-title='name'>Комплект 0245\n          </div>\n\n        </div>\n        <div class='col --cardTotal' data-title='total'>\n          <span class='col-title'>Ціна:</span>\n          <span class='col-text'>6000</span>\n          <span class='col-title'>Знижка:</span>\n          <span class='col-text'>500</span>\n          <span class='col-title'>Сума:</span>\n          <span class='col-text'>5500</span>\n        </div>\n      </div>\n      <div class='row-grid titles'>\n        <span class='col'>Атрибут 1:</span>\n        <span class='col'>Атрибут 2:</span>\n        <span class='col'>Кількість:</span>\n        <span class='col'>Ціна:</span>\n      </div>\n      <div class='row card-items'>\n        <div class='row card-item'>\n          <span class='row item-top'>\n            <span>Елемент № 1,</span>\n            <span class='element-sku'>art356984,</span>\n            <span class='element-name'>\"Назва елементу\"</span>\n          </span>\n          <div class='row-grid item-info'>\n\n            <div class='col' data-title='atribute-1'>\n              <input class='input --selectAtribute' type='text' value='XL' />\n            </div>\n\n            <div class='col' data-title='atribute-2'>\n              <input\n                class='input --selectAtribute'\n                type='text'\n                value='Зелений'\n              />\n            </div>\n\n            <div class='col --setQuantity' data-title='quantity'>\n              <button class='button --btnTableMinus'>-</button>\n              <input\n                class='input --inputQuantity'\n                type='text'\n                name='quantity'\n                value='1'\n              />\n              <button class='button --btnTablePlus'>+</button>\n            </div>\n\n            <div class='col' data-title='price'>\n              <span class='col-text'>3000</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class='row --card' data-card-id=''>\n      <div class='row cardInfo-grid'>\n        <div class='col --cardImg' data-title='img'>\n          <img\n            src='https://raw.githubusercontent.com/goodcat46/images/main/gamanets/AW22-PFD08E_88X_F1.webp'\n            alt=''\n          />\n        </div>\n        <div class='col --cardinfo' data-title='name'>\n          <div class='col --sku' data-title='sku'>art25252525\n\n          </div>\n          <div class='col --autorId' data-title='autorId'>brand-548\n          </div>\n          <div class='col --name' data-title='name'>Назва товару\n\n          </div>\n        </div>\n        <div class='col --cardTotal' data-title='total'>\n          <span class='col-title'>Ціна:</span>\n          <span class='col-text'>6000</span>\n          <span class='col-title'>Знижка:</span>\n          <span class='col-text'>500</span>\n          <span class='col-title'>Сума:</span>\n          <span class='col-text'>5500</span>\n        </div>\n      </div>\n      <div class='row-grid titles'>\n        <span class='col'>Атрибут 1:</span>\n        <span class='col'>Атрибут 2:</span>\n        <span class='col'>Кількість:</span>\n        <span class='col'>Ціна:</span>\n      </div>\n      <div class='row card-items'>\n        <div class='row card-item'>\n          <span class='row item-top'>\n            <span>Елемент № 1,</span>\n            <span class='element-sku'>art356984,</span>\n            <span class='element-name'>\"Назва елементу\"</span>\n          </span>\n          <div class='row-grid item-info'>\n\n            <div class='col' data-title='atribute-1'>\n              <input class='input --selectAtribute' type='text' value='XL' />\n            </div>\n\n            <div class='col' data-title='atribute-2'>\n              <input\n                class='input --selectAtribute'\n                type='text'\n                value='Зелений'\n              />\n            </div>\n\n            <div class='col --setQuantity' data-title='quantity'>\n              <button class='button --btnTableMinus'>-</button>\n              <input\n                class='input --inputQuantity'\n                type='text'\n                name='quantity'\n                value='1'\n              />\n              <button class='button --btnTablePlus'>+</button>\n            </div>\n\n            <div class='col' data-title='price'>\n              <span class='col-text'>3000</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    {{!-- {{/each}} --}}\n  </div>\n</div>","import sprite_market from '../images/sprite_market.svg';\nimport { autorsListData } from '../js-data/autorsList';\nimport { postsListData } from '../js-data/postsList';\nimport localstorage from './localstorage';\nimport { plugins } from './plugins';\nimport { cartObj } from './cart';\nimport cart from '../hbs/cart.hbs';\nlet cartContentArr = [];\ncartContentArr.push('102-2222')\nlocalstorage.save('cartContent', cartContentArr)\n\n//* Знаходжу усі необхідні елементи для створення і управління модалкою\nconst refs = {\n  modalEl: document.querySelector('[data-modal]'),\n  modalNameEl: document.querySelector('.js-modal-name'),\n  modalContentEl: document.querySelector('.js-modal-content'),\n  closeModalBtn: document.querySelector('[data-action=\"closeModal\"]'),\n  openCartBtnEl: document.querySelector('[data-action=\"openModal\"]'),\n};\n// * Деструктуризація для зручності звернення до змінних\nlet {\n  modalEl,\n  closeModalBtn,\n  modalContentEl,\n  modalNameEl,\n  openCartBtnEl,\n  ...otherRefs\n} = refs;\n\n//* Функція яка віслідковує усі події із кнопками\nfunction onActionsBtnClick() {\n  document.addEventListener('click', event => {\n    let { target } = event;\n    let btnAction = null;\n    let targetEl = null;\n    if (!target.classList.contains('button')) {\n      return;\n    } else if (target !== undefined && btnAction !== undefined) {\n      btnAction = target.dataset.action;\n      targetEl = target;\n      startBtnAction(btnAction, targetEl);\n      return;\n    }\n  });\n}\nonActionsBtnClick();\n\n// Функція із функціями які відповідаються кнопкам\nfunction startBtnAction(actionName, targetEl) {\n  let transferData = {\n    cardId: targetEl.dataset.cardId,\n    autorId: targetEl.dataset.autorId,\n    targetEl: targetEl,\n    cardObject: null,\n  };\n  transferData.cardObject = postsListData.find(\n    el => el.postId === transferData.cardId\n  );\n  //* обєкт із функціями кнопок\n  let btnActions = {\n    toggleModal: function onAnyModalOpenBtnClick() {\n      modalEl.classList.toggle('is-hidden');\n\n      if (modalEl.classList.contains('is-hidden')) {\n        modalNameEl.textContent = '';\n        modalContentEl.textContent = '';\n        modalNameEl.innerHTML = '';\n        modalContentEl.innerHTML = '';\n\n      }\n    },\n    closeModal: function onCloseModalBtnClick() {\n      modalEl.classList.toggle('is-hidden');\n\n      if (modalEl.classList.contains('is-hidden')) {\n        modalNameEl.textContent = '';\n        modalContentEl.textContent = '';\n        modalNameEl.innerHTML = '';\n        modalContentEl.innerHTML = '';\n        modalContentEl.classList.remove('--emptyCartContent');\n\n      }\n    },\n    showAutrorCards: function onShowAutorCardsBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n\n      this.toggleModal();\n      createModalContent(transferData, createAutorListModal);\n\n      function createAutorListModal(transferData) {\n        let { cardId, autorId, targetEl, cardObject } = transferData;\n        modalNameEl.textContent = `Автор ${autorId}`;\n        modalContentEl.insertAdjacentHTML(\n          'afterbegin',\n          `Тут будуть пости автора ${autorId}`\n        );\n      }\n    },\n    showMyCart: function onOpenCartBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      createModalContent(transferData, 'openCart');\n    },\n    // for to buy\n    buyLater: function userWantToBuyLater(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      targetEl.classList.toggle('--inCart');\n\n      if (targetEl.classList.contains('--inCart')) {\n        targetEl.classList.remove('--deleted');\n        cartObj.addItem(cardId);\n\n        return;\n      }\n      cartObj.removeItem(cardId);\n      targetEl.classList.add('--deleted');\n    },\n    buyNow: function userWantToBuyNow(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      // this.toggleModal();\n      createModalContent(transferData, 'buyNow');\n      console.log(`want to buy card ${cardId} Now`);\n    },\n    //* overlay\n    showSizes: function onOverlaySizesBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      console.log(`show card ${cardId} SIZES`);\n    },\n    showFotos: function onOverlayFotosBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      console.log(`show card ${cardId} FOTOS`);\n    },\n    showDetails: function onOverlayDetailsBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      console.log(`show card ${cardId} DETAILS`);\n    },\n    //* card actions\n    share: function onActionShareBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      console.log(`want SHARE post ${cardId}`);\n    },\n    like: function onActionLikeBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      targetEl.classList.toggle('--liked');\n\n      if (targetEl.classList.contains('--liked')) {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-heart\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was LIKED`);\n      } else {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-heart-o\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was UNLIKED`);\n      }\n    },\n    save: function onActionSaveBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      targetEl.classList.toggle('--saved');\n      if (targetEl.classList.contains('--saved')) {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-bookmark\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was SAVED`);\n      } else {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-bookmark-o\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was UNSAVED`);\n      }\n    },\n    comment: function onActionShareBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      console.log(`want COMMENT post ${cardId}`);\n    },\n    createSimpleOrder: function onCreateSimpleOrderBtnClick(transferData) {\n      let { cardId, autorId, targetEl, cardObject } = transferData;\n      console.log(\n        `Відправляється запит на сервер щодо створення швидкого замовлення на товар ${cardId}, art${cardObject.articul}, та формується INVOICE на оплату товару`\n      );\n\n      this.closeModal();\n\n      alert(\n        `Замовлення на товар art${cardObject.articul}, \"${cardObject.postName}\" сформовано. Очікуйте на інформацію у вашому особистому кабінеті. Дякуємо що ви з нами.`\n      );\n    },\n  };\n  btnActions[`${actionName}`](transferData);\n}\n// * Функція створення модалки\ncreateModalContent({}, 'openCart');\nfunction createModalContent(transferData, callback) {\n  let { cardId, autorId, targetEl, cardObject } = transferData;\n  // console.log(targetEl);\n  // console.log(cardObject);\n\n  //! postsListData\n\n  if (callback === undefined) {\n    modalNameEl.innerHTML = `Тут буде назва`;\n    modalContentEl.innerHTML = 'Тут буде вміст';\n    console.log('У модалку не передано наповнення');\n    return;\n  } else if (callback !== undefined) {\n    modalCallbacks(callback);\n    // console.log(callback);\n  }\n\n  function toggleModal() {\n    modalEl.classList.toggle('is-hidden');\n    if (modalEl.classList.contains('is-hidden')) {\n      modalNameEl.textContent = '';\n      modalContentEl.textContent = '';\n      modalNameEl.innerHTML = '';\n      modalContentEl.innerHTML = '';\n    }\n  }\n  function closeModal() {\n    modalEl.classList.toggle('is-hidden');\n    if (modalEl.classList.contains('is-hidden')) {\n      modalNameEl.textContent = '';\n      modalContentEl.textContent = '';\n      modalNameEl.innerHTML = '';\n      modalContentEl.innerHTML = '';\n      modalContentEl.classList.remove('--emptyCartContent');\n    }\n  }\n  function modalCallbacks(callback) {\n    let modalActions = {\n      openCart: function createModalCart() {\n        let cartContentArr = localstorage.load('cartContent');\n        let cartContentObjArr;\n        //! тут має бути запит на сервер за даними про товари додані у корзину\n        if (cartContentArr !== undefined){\n          console.log(\"Товари у корзині готові для відмальовки\",cartContentObjArr);\n\n          plugins.filterArrByArr(\n            cartContentArr,\n            postsListData,\n            cartContentObjArr\n          );\n  \n          toggleModal();\n  \n          modalNameEl.textContent = `Корзина`;\n          modalContentEl.innerHTML = cart();\n          return\n        } else {\n          toggleModal();\n          modalNameEl.textContent = `Корзина`;\n          modalContentEl.innerHTML = 'Ви не додали жодного товару у корзину';\n          modalContentEl.classList.add('--emptyCartContent')\n        }\n      },\n      buyNow: function createModalToBuyNow(transferData) {\n        toggleModal();\n        let { cardObject } = transferData;\n        let {\n          postId = '000-000000',\n          postType = 'posttype',\n          postName = 'postName',\n          postAutorId = 'postAutorId',\n          articul = '000000',\n          price = 0,\n          cashbackLvl = '00',\n          currency = 'UAH',\n          mainImgLink = './',\n          socialsLinkList = [],\n          ...others\n        } = cardObject;\n        modalNameEl.textContent = `Купити товар art${articul}`;\n        modalContentEl.innerHTML = `\n        тут буде відображатись інфа про обраний товар\n        <button class=\"button --buyNow --createSimpleOrder\" type=\"button\" data-action=\"createSimpleOrder\" data-card-id=\"${postId}\">\n          Оформити замовлення\n        </button>\n        `;\n      },\n    };\n    modalActions[`${callback}`](transferData);\n  }\n}\n"],"names":["parcelRequire","register","JSON","parse","$fbefcee1b554dc7e$exports","getBundleURL","resolve","$50116558f77987dc$export$2e2bcd8739ae039","key","value","serializedState","stringify","localStorage","setItem","error","console","message","getItem","undefined","removeItem","log","$2757af969a3e99b8$export$8b3ca321c77fdea6","filterArrByArr","arrayWithElements","arrayForFiltering","arrayForPushing","foundedEl","i","length","find","post","postId","push","$ce375e1befa17f1c$export$25ef895dd43a8891","cartInfo","contentCardsIdArr","contentCardsObjArr","name","contentAutorsIdArr","totalQuantity","totalSum","addItem","itemId","itemObject","target","alert","$a5b5e0972e4c1c76$export$2e2bcd8739ae039","$parcel$interopDefault","template","compiler","main","container","depth0","helpers","partials","data","useData","$05edf6e5c151c415$var$cartContentArr","save","$05edf6e5c151c415$var$refs","modalEl","document","querySelector","modalNameEl","modalContentEl","closeModalBtn","openCartBtnEl","$05edf6e5c151c415$var$modalEl","$05edf6e5c151c415$var$closeModalBtn","$05edf6e5c151c415$var$modalContentEl","$05edf6e5c151c415$var$modalNameEl","$05edf6e5c151c415$var$openCartBtnEl","$05edf6e5c151c415$var$otherRefs","$05edf6e5c151c415$var$createModalContent","transferData","callback","cardId","autorId","targetEl","cardObject","innerHTML","toggleModal","classList","toggle","contains","textContent","modalActions","openCart","cartContentObjArr","cartContentArr","load","$9OhiC","postsListData","add","buyNow","postType","postName","postAutorId","articul","price","cashbackLvl","currency","mainImgLink","socialsLinkList","others","modalCallbacks","addEventListener","event","btnAction","dataset","action","actionName","el","btnActions","closeModal","remove","showAutrorCards","createAutorListModal","insertAdjacentHTML","this","showMyCart","buyLater","showSizes","showFotos","showDetails","share","like","comment","createSimpleOrder","$05edf6e5c151c415$var$startBtnAction"],"version":3,"file":"index.d5c3c33d.js.map"}
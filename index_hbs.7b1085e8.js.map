{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-0af96601648205bc.js","node_modules/@parcel/runtime-js/lib/runtime-6c3d1ae1dd7f4ab2.js","src/js/localstorage.js","src/js/cart.js","src/js/modal_hbs.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"9gywt\\\":\\\"index_hbs.7b1085e8.js\\\",\\\"goACZ\\\":\\\"sprite_market.15459aa5.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"goACZ\")).toString();","'use strict';\n\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import sprite_market from '../images/sprite_market.svg';\nimport { autorsListData } from '../js-data/autorsList';\nimport { postsListData } from '../js-data/postsList';\nimport localstorage from './localstorage';\n\nexport let cartObj = {\n  cartInfo: {\n    contentCardsIdArr: ['101-2222'],\n    contentCardsObjArr: [{postId:'101-2222', name:'Куртка'}],\n    contentAutorsIdArr: ['101'],\n    totalQuantity: null,\n    totalSum: null,\n  },\n\n  addItem: function onAddItemToCart(itemId, itemObject, target) {\n    // this.cartInfo = localstorage.load('cartInfo');\n    // this.cartInfo.contentCardsIdArr.push(itemId);\n    // this.cartInfo.contentCardsObjArr.push(itemObject);\n    // this.cartInfo.contentAutorsIdArr.push(itemObject.autorId);\n    // this.cartInfo = localstorage.save('cartInfo', cartInfo);\n    // if (cartInfo !== undefined) {\n    // }\n    alert(`Товар art${itemId} додано до корзини.`);\n  },\n  removeItem: function onRemoveItemFromCart(itemId, target) {\n    alert(`Товар art${itemId} видалено із корзини.`);\n  },\n};\n","import sprite_market from '../images/sprite_market.svg';\nimport { autorsListData } from '../js-data/autorsList';\nimport { postsListData } from '../js-data/postsList';\nimport localstorage from './localstorage';\nimport { cartObj } from './cart';\n\n//* Знаходжу усі необхідні елементи для створення і управління модалкою\nconst refs = {\n  modalEl: document.querySelector('[data-modal]'),\n  modalNameEl: document.querySelector('.js-modal-name'),\n  modalContentEl: document.querySelector('.js-modal-content'),\n  closeModalBtn: document.querySelector('[data-action=\"closeModal\"]'),\n  openCartBtnEl: document.querySelector('[data-action=\"openModal\"]'),\n};\n// * Деструктуризація для зручності звернення до змінних\nlet {\n  modalEl,\n  closeModalBtn,\n  modalContentEl,\n  modalNameEl,\n  openCartBtnEl,\n  ...otherRefs\n} = refs;\nonActionsBtnClick();\nfunction onActionsBtnClick() {\n  document.addEventListener('click', event => {\n    let { target } = event;\n    let btnAction = null;\n    let targetEl = null;\n    if (!target.classList.contains('button')) {\n      return;\n    } else if (target !== undefined && btnAction !== undefined) {\n      btnAction = target.dataset.action;\n      targetEl = target;\n      startBtnAction(btnAction, targetEl);\n      return;\n    }\n  });\n}\n// * Функція створення модалки\nfunction createModalContent(objectData, callback) {\n  let { cardId, autorId, targetEl, cardObject } = objectData;\n  // console.log(targetEl);\n\n  if (callback === undefined) {\n    modalNameEl.innerHTML = `Тут буде назва`;\n    modalContentEl.innerHTML = 'Тут буде вміст';\n    console.log('У модалку не передано наповнення');\n    return;\n  } else if (callback !== undefined) {\n    callback(objectData);\n  }\n}\n// Функція із функціями які відповідаються кнопкам\nfunction startBtnAction(actionName, targetEl) {\n  let objectData = {\n    cardId: targetEl.dataset.cardId,\n    autorId: targetEl.dataset.autorId,\n    targetEl: targetEl,\n    cardObject: null,\n  };\n  objectData.cardObject = postsListData.find(\n    el => el.postId === objectData.cardId\n  );\n\n  let btnActions = {\n    toggleModal: function onAnyModalOpenBtnClick() {\n      modalEl.classList.toggle('is-hidden');\n      // closeModalBtn.addEventListener('click', toggleModal);\n      if (modalEl.classList.contains('is-hidden')) {\n        modalNameEl.textContent = '';\n        modalContentEl.textContent = '';\n        modalNameEl.innerHTML = '';\n        modalContentEl.innerHTML = '';\n        // closeModalBtn.removeEventListener('click', toggleModal);\n      }\n    },\n    closeModal: function onCloseModalBtnClick() {\n      modalEl.classList.toggle('is-hidden');\n      // closeModalBtn.addEventListener('click', toggleModal);\n      if (modalEl.classList.contains('is-hidden')) {\n        modalNameEl.textContent = '';\n        modalContentEl.textContent = '';\n        modalNameEl.innerHTML = '';\n        modalContentEl.innerHTML = '';\n        // closeModalBtn.removeEventListener('click', toggleModal);\n      }\n    },\n    showAutrorCards: function onShowAutorCardsBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n\n      this.toggleModal();\n      createModalContent(objectData, createAutorListModal);\n\n      function createAutorListModal(objectData) {\n        let { cardId, autorId, targetEl, cardObject } = objectData;\n        modalNameEl.textContent = `Автор ${autorId}`;\n        modalContentEl.insertAdjacentHTML(\n          'afterbegin',\n          `Тут будуть пости автора ${autorId}`\n        );\n      }\n    },\n    showMyCart: function onOpenCartBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      this.toggleModal();\n      createModalContent(targetEl, createModalCart);\n      function createModalCart() {\n        let cartContent = localstorage.load('cartContent');\n\n        modalNameEl.textContent = `Корзина`;\n        modalContentEl.innerHTML = `Шаблон корзини ${cartContent}`;\n      }\n    },\n    // for to buy\n    buyLater: function userWantToBuyLater(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      targetEl.classList.toggle('--inCart');\n\n      if (targetEl.classList.contains('--inCart')) {\n        targetEl.classList.remove('--deleted');\n        cartObj.addItem(cardId);\n\n        return;\n      }\n      cartObj.removeItem(cardId);\n      targetEl.classList.add('--deleted');\n    },\n    buyNow: function userWantToBuyNow(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      this.toggleModal();\n      createModalContent(objectData, createModalToBuyNow);\n      console.log(`want to buy card ${cardId} Now`);\n      function createModalToBuyNow({ cardObject, ...rest }) {\n        let {\n          postId = '000-000000',\n          postType = 'posttype',\n          postName = 'postName',\n          postAutorId = 'postAutorId',\n          articul = '000000',\n          price = 0,\n          cashbackLvl = '00',\n          currency = 'UAH',\n          mainImgLink = './',\n          socialsLinkList = [],\n          ...others\n        } = cardObject;\n        modalNameEl.textContent = `Купити товар art${articul}`;\n        modalContentEl.innerHTML = `\n        тут буде відображатись інфа про обраний товар\n        <button class=\"button --buyNow --createSimpleOrder\" type=\"button\" data-action=\"createSimpleOrder\" data-card-id=\"${postId}\">\n          Купити\n        </button>\n        `;\n      }\n    },\n    //* overlay\n    showSizes: function onOverlaySizesBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      console.log(`show card ${cardId} SIZES`);\n    },\n    showFotos: function onOverlayFotosBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      console.log(`show card ${cardId} FOTOS`);\n    },\n    showDetails: function onOverlayDetailsBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      console.log(`show card ${cardId} DETAILS`);\n    },\n    //* card actions\n    share: function onActionShareBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      console.log(`want SHARE post ${cardId}`);\n    },\n    like: function onActionLikeBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      targetEl.classList.toggle('--liked');\n\n      if (targetEl.classList.contains('--liked')) {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-heart\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was LIKED`);\n      } else {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-heart-o\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was UNLIKED`);\n      }\n    },\n    save: function onActionSaveBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      targetEl.classList.toggle('--saved');\n      if (targetEl.classList.contains('--saved')) {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-bookmark\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was SAVED`);\n      } else {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n       <use href=\"${sprite_market}#icon-bookmark-o\"></use>\n     </svg>`;\n        console.log(`post ${cardId} was UNSAVED`);\n      }\n    },\n    comment: function onActionShareBtnClick(objectData) {\n      let { cardId, autorId, targetEl, cardObject } = objectData;\n      console.log(`want COMMENT post ${cardId}`);\n    },\n  };\n  btnActions[`${actionName}`](objectData);\n}\n"],"names":["parcelRequire","register","JSON","parse","$3847fb7bb370d4e7$exports","URL","resolve","import","meta","url","toString","$89a4baeedb6cdec9$export$2e2bcd8739ae039","key","value","serializedState","stringify","localStorage","setItem","error","console","message","getItem","undefined","removeItem","log","$915de8ffc4dd3149$export$25ef895dd43a8891","cartInfo","contentCardsIdArr","contentCardsObjArr","postId","name","contentAutorsIdArr","totalQuantity","totalSum","addItem","itemId","itemObject","target","alert","$0e1edd035a557d89$var$refs","modalEl","document","querySelector","modalNameEl","modalContentEl","closeModalBtn","openCartBtnEl","$0e1edd035a557d89$var$modalEl","$0e1edd035a557d89$var$closeModalBtn","$0e1edd035a557d89$var$modalContentEl","$0e1edd035a557d89$var$modalNameEl","$0e1edd035a557d89$var$openCartBtnEl","$0e1edd035a557d89$var$otherRefs","$0e1edd035a557d89$var$createModalContent","objectData","callback","cardId","autorId","targetEl","cardObject","innerHTML","addEventListener","event","btnAction","classList","contains","dataset","action","actionName","$k4aWK","postsListData","find","el","btnActions","toggleModal","toggle","textContent","closeModal","showAutrorCards","createAutorListModal","insertAdjacentHTML","this","showMyCart","createModalCart","cartContent","load","buyLater","remove","add","buyNow","createModalToBuyNow","rest","postType","postName","postAutorId","articul","price","cashbackLvl","currency","mainImgLink","socialsLinkList","others","showSizes","showFotos","showDetails","share","like","$parcel$interopDefault","save","comment","$0e1edd035a557d89$var$startBtnAction"],"version":3,"file":"index_hbs.7b1085e8.js.map"}
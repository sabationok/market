{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-eb743b964240daa3.js","node_modules/@parcel/runtime-js/lib/runtime-6c3d1ae1dd7f4ab2.js","src/js/modal.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"Ujaud\\\":\\\"index.83937871.js\\\",\\\"goACZ\\\":\\\"sprite_market.15459aa5.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"goACZ\")).toString();","import sprite_market from '../images/sprite_market.svg';\nimport { autorsListData } from '../js-data/autorsList';\nimport { postsListData } from '../js-data/postsList';\n\n//* Знаходжу усі необхідні елементи для створення і управління модалкою\nconst refs = {\n  modalEl: document.querySelector('[data-modal]'),\n  closeModalBtn: document.querySelector('[data-modal-close]'),\n  modalNameEl: document.querySelector('.js-modal-name'),\n  modalContentEl: document.querySelector('.js-modal-content'),\n};\n// * Деструктурищзація для зручності звернення до змінних\nlet { modalEl, closeModalBtn, modalContentEl, modalNameEl, ...otherRefs } =\n  refs;\n// * Функція зміни класу БЕКДРОП\nfunction toggleModal() {\n  modalEl.classList.toggle('is-hidden');\n  closeModalBtn.addEventListener('click', toggleModal);\n  if (modalEl.classList.contains('is-hidden')) {\n    modalNameEl.textContent = '';\n    modalContentEl.textContent = '';\n    closeModalBtn.removeEventListener('click', toggleModal);\n  }\n}\n\n// * Функція створення модалки\nfunction createModalContent(callback, target) {\n  console.log(target);\n\n  // * Навішується слухач подій на кнопку закриття модалки\n  closeModalBtn.addEventListener('click', toggleModal);\n\n  //! тестове наповнення модалки\n  if (callback === undefined) {\n    modalNameEl.textContent = `Тут буде назва`;\n    modalContentEl.insertAdjacentHTML(\n      'afterbegin',\n      `\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      Доброго вечора ми з України!\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      `\n      \n    );\n    console.log('У модалку не передано кнаповнення');\n    return\n  } else  if(callback !== undefined){\n    callback();\n  }\n}\n//todo Функція роботи із корзиною\nonOpenCArtBtnClick();\nfunction onOpenCArtBtnClick() {\n  let openCartBtnEl = document.querySelector('.--showMyCart');\n  openCartBtnEl.addEventListener('click', () => {\n    toggleModal();\n    createModalContent(createModalCart);\n    function createModalCart() {\n      modalNameEl.textContent = `Корзина`;\n      modalContentEl.insertAdjacentHTML(\n        'afterbegin',\n        `\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      Тут буде вміст корзини\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      <p>*</p>\n      `\n      );\n    }\n  });\n}\n\n//todo Навішую слухача подій на кнопку на document для делегування події \"CLICK\" на кнопки карток\nonShowAutorCardsBtnClick(autorsListData);\nfunction onShowAutorCardsBtnClick(arrayForFinding) {\n  const refs = {\n    autorId: null,\n    autorCardsList: null,\n    targetEl: null,\n  };\n\n  document.addEventListener('click', buttonEvent => {\n    let { target } = buttonEvent;\n    if (!target.classList.contains('--open-autorCardList')) {\n      return;\n    } else if (target !== undefined) {\n      refs.autorId = target.dataset.autorId;\n      refs.targetEl = target;\n\n      refs.autorCardsList = arrayForFinding.filter(\n        el => el.postId === refs.idForFind\n      );\n      console.log(refs.idForFind);\n      toggleModal();\n      createModalContent(createAutorListModal, target);\n      return;\n    }\n  });\n  function createAutorListModal(autorId) {\n    modalNameEl.textContent = `Автор ${autorId}`;\n    modalContentEl.insertAdjacentHTML(\n      'afterbegin',\n      `\n    <p>*</p>\n    <p>*</p>\n    <p>*</p>\n    <p>*</p>\n    <p>*</p>\n    Тут будуть пости автора ${autorId}\n    <p>*</p>\n    <p>*</p>\n    <p>*</p>\n    <p>*</p>\n    <p>*</p>\n    `\n    );\n  }\n}\n\n//todo Навішую слухача подій на кнопку на document для делегування події \"CLICK\" на кнопки карток\nonAllCardButtonsClick(postsListData);\nfunction onAllCardButtonsClick(arrayForFinding) {\n  const refs = {\n    buttonActionType: null,\n    idForFind: null,\n    foundedCardDataObj: null,\n    targetEl: null,\n  };\n\n  document.addEventListener('click', buttonEvent => {\n    let { target } = buttonEvent;\n    if (!target.classList.contains('button')) {\n      return;\n    } else if (target !== undefined) {\n      refs.buttonActionType = Object.keys(target.dataset).join('');\n      refs.idForFind = Object.values(target.dataset).join('');\n      refs.targetEl = target;\n      refs.foundedCardDataObj = arrayForFinding.find(\n        el => el.postId === refs.idForFind\n      );\n      toFindBtnAction(refs);\n      return;\n    }\n  });\n}\n\n//* Функція яка шукає відповідну функцію до кнопки і запускає її\nfunction toFindBtnAction(refsObj) {\n  let {\n    targetEl,\n    buttonActionType,\n    idForFind: cardId,\n    foundedCardDataObj: cardDataObj,\n    ...otherRefs\n  } = refsObj;\n  let foundedBtnActionObj = null;\n\n  for (const el of btnActionsArr) {\n    if (el.actionName === buttonActionType) {\n      foundedBtnActionObj = el.actionFoo;\n      //* Запускаю найдену функцію кнопки\n      foundedBtnActionObj(cardId, cardDataObj, targetEl);\n      return;\n    }\n  }\n}\n\n//todo масив для перебору функцією .toFindBtnAction,  із функціями кнопок\nconst btnActionsArr = [\n  {\n    actionName: 'buyLater',\n    actionFoo: function userWantToBuyLater(cardId, cardDataObj, targetEl) {\n      targetEl.classList.toggle('--inCart');\n      if (targetEl.classList.contains('--inCart')) {\n        targetEl.classList.remove('--deleted');\n        alert(`Товар ar${cardId} додано до корзини.`);\n        return;\n      }\n      targetEl.classList.add('--deleted');\n      alert(`Товар ar${cardId} видалено із корзини.`);\n    },\n  },\n  {\n    actionName: 'buyNow',\n    actionFoo: function userWantToBuyNow(cardId, cardDataObj, targetEl) {\n      toggleModal();\n      createModalContent();\n      console.log(`want to buy card ${cardId} Now`);\n    },\n  },\n  {\n    actionName: 'showFotos',\n    actionFoo: function onOverlayFotosBtnClick(cardId, cardDataObj, targetEl) {\n      console.log(`show card ${cardId} FOTOS`);\n    },\n  },\n  {\n    actionName: 'showSizes',\n    actionFoo: function onOverlaySizesBtnClick(cardId, cardDataObj, targetEl) {\n      console.log(`show card ${cardId} SIZES`);\n    },\n  },\n  {\n    actionName: 'showDetails',\n    actionFoo: function onOverlayDetailsBtnClick(\n      cardId,\n      cardDataObj,\n      targetEl\n    ) {\n      console.log(`show card ${cardId} DETAILS`);\n    },\n  },\n  {\n    actionName: 'actionShare',\n    actionFoo: function onActionShareBtnClick(cardId, cardDataObj, targetEl) {\n      console.log(`want SHARE post ${cardId}`);\n    },\n  },\n  {\n    actionName: 'actionLike',\n    actionFoo: function onActionLikeBtnClick(cardId, cardDataObj, targetEl) {\n      targetEl.classList.toggle('--liked');\n\n      if (targetEl.classList.contains('--liked')) {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n      <use href=\"${sprite_market}#icon-heart\"></use>\n    </svg>`;\n        console.log(`post ${cardId} was LIKED`);\n      } else {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n      <use href=\"${sprite_market}#icon-heart-o\"></use>\n    </svg>`;\n        console.log(`post ${cardId} was UNLIKED`);\n      }\n    },\n  },\n  {\n    actionName: 'actionSave',\n    actionFoo: function onActionSaveBtnClick(cardId, cardDataObj, targetEl) {\n      targetEl.classList.toggle('--saved');\n      if (targetEl.classList.contains('--saved')) {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n      <use href=\"${sprite_market}#icon-bookmark\"></use>\n    </svg>`;\n        console.log(`post ${cardId} was SAVED`);\n      } else {\n        targetEl.innerHTML = `<svg class=\"btn-svg\">\n      <use href=\"${sprite_market}#icon-bookmark-o\"></use>\n    </svg>`;\n        console.log(`post ${cardId} was UNSAVED`);\n      }\n    },\n  },\n  // {\n  //   actionName: 'showAllCards',\n  //   actionFoo: function onOpenAllCardsBtnClick(cardId, cardDataObj) {\n  //     toggleModal(),\n  //       // createModalContent()\n  //       console.log(\n  //         `Відкриває модалку із списокм всіх постів автора  та фільтром`\n  //       );\n  //   },\n  // },\n];\n"],"names":["parcelRequire","register","JSON","parse","$3847fb7bb370d4e7$exports","URL","resolve","import","meta","url","toString","$8a7e756c566dd1ea$var$refs","modalEl","document","querySelector","closeModalBtn","modalNameEl","modalContentEl","$8a7e756c566dd1ea$var$modalEl","$8a7e756c566dd1ea$var$closeModalBtn","$8a7e756c566dd1ea$var$modalContentEl","$8a7e756c566dd1ea$var$modalNameEl","$8a7e756c566dd1ea$var$otherRefs","$8a7e756c566dd1ea$var$toggleModal","classList","toggle","addEventListener","contains","textContent","removeEventListener","$8a7e756c566dd1ea$var$createModalContent","callback","target","console","log","undefined","insertAdjacentHTML","arrayForFinding","refs","autorId","autorCardsList","targetEl","createAutorListModal","buttonEvent","dataset","filter","el","postId","idForFind","$8a7e756c566dd1ea$var$onShowAutorCardsBtnClick","$77sQY","autorsListData","buttonActionType","foundedCardDataObj","Object","keys","join","values","find","refsObj","cardId","cardDataObj","otherRefs","foundedBtnActionObj","$8a7e756c566dd1ea$var$btnActionsArr","actionName","actionFoo","$8a7e756c566dd1ea$var$toFindBtnAction","$8a7e756c566dd1ea$var$onAllCardButtonsClick","$k4aWK","postsListData","remove","alert","add","innerHTML","$parcel$interopDefault"],"version":3,"file":"index.83937871.js.map"}